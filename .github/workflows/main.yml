name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Build and push Docker image
        env:
          ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY_URI:$IMAGE_TAG .
          docker push $ECR_REPOSITORY_URI:$IMAGE_TAG

      - name: Describe ECS task definition
        id: describe-task
        env:
          ECS_TASK_DEFINITION_NAME: ${{ secrets.ECS_TASK_DEFINITION_NAME }}
        run: |
          aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION_NAME > task-definition.json
          cat task-definition.json

      - name: Update ECS task definition
        env:
          ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
          IMAGE_TAG: ${{ github.sha }}
          ECS_TASK_DEFINITION_NAME: ${{ secrets.ECS_TASK_DEFINITION_NAME }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          # Replace image URI in task-definition.json
          sed -i 's|"image": ".*"|"image": "'"$ECR_REPOSITORY_URI:$IMAGE_TAG"'"|' task-definition.json
            
          # Add DB environment variables to containerDefinitions[1].environment
          jq '.containerDefinitions[1].environment += [
            { "name": "DB_URL", "value": "'"$DB_URL"'" },
            { "name": "DB_USERNAME", "value": "'"$DB_USERNAME"'" },
            { "name": "DB_PASSWORD", "value": "'"$DB_PASSWORD"'" }
          ]' task-definition.json > new-task-definition.json
            
          # Register the new task definition
          aws ecs register-task-definition --cli-input-json file://new-task-definition.json
            
          # Optional: Display the new task definition for verification
          cat new-task-definition.json

      - name: Deploy to Amazon ECS
        env:
          ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
          ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
          ECS_TASK_DEFINITION_NAME: ${{ secrets.ECS_TASK_DEFINITION_NAME }}
        run: |
          NEW_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION_NAME --query "taskDefinition.taskDefinitionArn" --output text)
          echo "New task definition ARN: $NEW_TASK_DEFINITION"
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --task-definition $NEW_TASK_DEFINITION --force-new-deployment --region ${{ secrets.AWS_REGION }}
